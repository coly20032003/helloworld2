<apex:page standardController="Opportunity" extensions="OpportunityStageController" id="oppStagePage" cache="false">
    <apex:includeScript value="{!$Resource.Jquery}" />
    <apex:stylesheet value="{!URLFOR($Resource.CssResource, 'css/LogPaymentCSS.css')}" />
        
    <div id="load_scrl" class="loadingBox loader" style="display:none"> </div>
    <div class="loadingBox overlay"> </div>

    <style>
        .button {
            background-image:url('{!URLFOR($Resource.Styles,'Styles/PreviousArrow.png')}');
        }
        .pbSubheader {
            color: black !important;
        }

        .myClass { width: 400px; }

        .overlay {
           display: none;
           height: 100%;
           left: 0;
           position: fixed;
           top: 0;
           opacity: 0.3;
           -moz-opacity: 0.3;
           width: 100%;
           -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
           filter: alpha(opacity=30);
           background: #000;
           -khtml-opacity: 0.3;
           z-index: 1000;
         }
         .loader {
           background: url('/img/loading32.gif') scroll no-repeat 0 0;
           width: 24px;
           height: 24px;
           position: absolute;
           background-size: contain;
           left: 50%;
         }
         
         .selectedLi {
             //border: 2px solid darkblue;
             box-sizing: border-box;
             //border-bottom: 3px solid black;
             text-decoration: underline !important;
             font-weight: bold !important;
         }
         
         .current {
             font-weight: normal !important;
             font-size: 12px !important;
         }
         
         #breadcrumbs-one a {
             padding: 0px 10px 0px 30px !important;
             height: 34px;
             line-height: 31px;
         }
         
         .greenClass {
             background: #008B00 !important;
         }
         
         .greenClass::after {
             border: #008B00 !important;
         }
         
         .greenClass::before {
             border-left-color: #008B00 !important
         }
         
         .green {
             background: #008B00 !important;
             color: white !important;
             box-sizing: border-box;
         }
         
         .green:hover {
             background: white !important;
             color: black !important;
         }
         
         .green:hover::after {
             border-left-color: white !important;
         }
         
         .green::after {
              border-left-color: #008B00 !important;
         }
         
         .green.current:hover {
             background: white !important;
         }
         
         .questionsDiv {
              min-height: 200px;
              overflow-y: auto;
              width: 50%;
              margin-bottom: 10px;
              margin: auto;
         }
         
         .tabPanel {
              position: relative;
              text-align: center;
              width: 100%;
              margin-top: 20px;
         }
         
         .tabPanel ul {
             display: inline-block;
         }
         
         .stageCompleteBtn {
              font-weight: bold;
              background: #007bb4;
              color: #fff;
              
              height: 30px;
         }
         
         .closedLostBtn {
              font-weight: bold;
              background: #007bb4;
              color: #fff;
              
              height: 30px;
         }
         
         .questionsPanel {
             width: 100%;
             position: relative;
         }
         
         .nextBtn {
             background: transparent url(/resource/1429891734000/NextArrow) no-repeat !important;
              background-size: contain !important;
              width: 30px;
              height: 30px;
              top: 0;
              right: 0;
              position: absolute;
         }
         
         .prevBtn {
             background: transparent url(/resource/1429891719000/PreviousArrow) no-repeat !important;
              background-size: contain !important;
              width: 30px;
              height: 30px;
              top: 0;
              left: 0;
              position: absolute;
         }
         
         .chkImage {
             margin-bottom: -5px;
         }
         
         .disable {
             color: #7b7b7b !important;
         }
         
         .red:hover {
             color: black !important;
             background: #dcf2fd !important;
         }
        
         .markButtons {
             width: 304px;
             margin: auto;
         }
         
         .message1 {
            background-color: #ffc;
            border-style: solid;
            border-width: 1px;
            color: #000;
            margin: 4px 0;
            padding: 6px 8px 6px 35px;
        }
        .message1 {
            border-radius: 4px;
        }
        .errorM31{
            border-color: #c00;
        }
        #breadcrumbs-one .disable::before { right: -1.4em; }
        
    </style>

    <script type="text/javascript">

        var stageNoVSNameMap = new Object(); 
        var stageColorMap = new Object(); 
        var isErrors = false;
        
        $(document).ready(function() {
            console.log('EEEEEE');
            
            firstPageLoad();
            // StageAndQuestion();
            $("#ErrorDiv").hide();
            //
        });

        function startLoading(){
            $('#load_scrl').css('top', $(document).scrollTop() + 200);
            $('.loadingBox').show();
        }
 
         function endLoading(){
            $('.loadingBox').hide();
        }
        
        function hideerror(){
            $("#ErrorDiv").hide();
        }

        function changeImage(idOfImage,oppId,recordTypeName,currentStage,opportunityStage,isUpdatable) {
        
        
        $("#ErrorDiv").hide();
        
        var image = document.getElementById(idOfImage);
        
        var hasEditAccess = '{!hasEditAccessToUser}';
        var isReadOnly = '{!$Setup.OpportunityStagePermission__c.Is_ReadOnly__c}';
        console.log('#####'+isUpdatable);
        console.log('#####'+hasEditAccess);
        console.log('#####'+isReadOnly);
        //if(opportunityStage == "{!CLOSED_LOST}")
          //  return false;
        if(isUpdatable == 'false'|| hasEditAccess == 'false' || isReadOnly == 'true') {
        
            document.getElementById("ErrorDiv").innerHTML = "<b style='color:red'>Error:</b>"+ "<br /> Insufficient Privileges";
            $("#ErrorDiv").show();
        }
       
        
        else {
              
        Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.OpportunityStageController.updateQuestionAnsweredValue}',
                 idOfImage, 
                 oppId,
                 recordTypeName,
                 currentStage,
                 "{!CLOSED_WON}",
                 "{!CLOSED_LOST}",
                 function(result, event){

                    if(result[0] == 'true') {
                        
                         if (image.src.match("{!$Resource.Unchecked_Arrow}")) {
                            image.src = "/img/msg_icons/confirm16.png";
                        } 
                        else {
                            image.src = "{!$Resource.Unchecked_Arrow}";
                        } 
                        
                        if(result[1] == "true") {
                            //$(".selectedLi").addClass("green");
                            //alert("navigate");
                            navigateToSection(result[2], result[2].substring(0, result[2].indexOf("-")));
                            $("#ErrorDiv").hide();
                        }
                        //else {
                          //  $(".selectedLi").removeClass("green");
                        //}
                        
                        
                    }
                    
                    else { 
                    var errorStr = "<b style='color:red'>Error:</b>";                 
                     for (var i = 0; i < result.length; i++) {  
                             console.log('###trim'+$.trim( $('#ErrorDiv').html() ).length);   
                            if($.trim( $('#ErrorDiv').html() ).length){  
                             console.log('###if'+i);                     
                             document.getElementById("ErrorDiv").innerHTML = "<b style='color:red'>Error:</b>"+ "<br />" +result[i];
                             console.log('##value-if'+document.getElementById("ErrorDiv").value);
                            }else{
                             document.getElementById("ErrorDiv").innerHTML = "<br />" +result[i];                         
                             console.log('###else'+i);
                            }
                            $("#ErrorDiv").show();
                            //isErrors = true;
                             
                        }   
                    }
                 }
            );
          }
        }

         function checkAllQuestions() {
            var isAllQuestionsAnswered = true;
            $("[id$='DisplayStageQuestions1']").find("img").each(function () {
                if($(this).attr("src").indexOf("confirm16.png") == -1) {
                    //Meaning the question has not been checked
                    isAllQuestionsAnswered = false;
                    return;
                }
            });
            
            if(isAllQuestionsAnswered) {
                $(".selectedLi").addClass("green");
                //navigateToSection(nextStage, nextStageNumber);
            }
            else {
                $(".selectedLi").removeClass("green");
            }
        }

        

        function changeSelectedTab(element) {
        
            hideerror();
            $("ul.ul-li-class > li").each(function() {
                if($(this).find("a").attr("id") == $(element).attr("id"))
                    $(this).find("a").addClass("selectedLi");
                else
                    $(this).find("a").removeClass("selectedLi");
            });
        }
        
    </script>

    <apex:form id="form1">
    
          
           <apex:outputpanel id="panel">
             <apex:pageMessages />
           </apex:outputpanel>
           <div id="ErrorDiv" class="message1 errorM31">
           <span></span>
            
           </div>
         
          <apex:actionFunction name="firstPageLoad" action="{!loadPage}" rerender="mainPanel" status="loadStatus"/>
          
         <apex:actionFunction name="StageAndQuestion" action="{!displayParticularSection}" reRender="panel1">
            <apex:param name="sectionToDisplay1" value="" assignTo="{!opportunityCurrentStage}" />
         </apex:actionFunction>
          
         <apex:actionFunction name="UpdateOpportunityCurrentStage" action="{!getStageQuestions}" reRender="panel, panel1, DisplayStageQuestions"/>     
         
         
        <apex:actionFunction name="navigateToSection" action="{!displayParticularSection}" reRender="panel, mainPanel" status="loadStatus">
            <apex:param name="sectionToDisplay1" value="" assignTo="{!selectedStage}" />
            <apex:param name="sectionToDisplay2" value="" assignTo="{!selectedOpportunityStep}" />
        </apex:actionFunction>
        <apex:actionStatus onstart="startLoading();" onstop="endLoading();" id="loadStatus"/> 
        
        <apex:outputPanel layout="block" id="mainPanel">
        
        <apex:outputpanel id="panel1">
            <div class="tabPanel">
                <ul id="breadcrumbs-one" class="ul-li-class"> 
                    <apex:repeat value="{!opportunityStageMap}" var="stageNumber">
                        <li class="ul-li-class" id="li-{!stageNumber}">
                            <apex:outputPanel >
                                <a href="#" id="a-{!stageNumber}" class="{!IF(opportunityCurrentStage==opportunityStageMap[stageNumber].stageName, 'current', 'dummy')} {!IF(selectedStage==opportunityStageMap[stageNumber].stageName, 'selectedLi', '')}" onclick="navigateToSection('{!opportunityStageMap[stageNumber].stageName}','{!stageNumber}'); changeSelectedTab(this); return false;">
                                    <apex:outputText value="{!IF(AND(opportunityCurrentStage == CLOSED_LOST, opportunityStageMap[stageNumber].stageName == CLOSED_WON), CLOSED_LOST, opportunityStageMap[stageNumber].stageName)}"/>
                                </a>
                            </apex:outputPanel>
                        </li>
                    </apex:repeat> 
                </ul>  
           </div>
           
           <script>
           
               $(document).ready(function() {
                   getOpportunityStageColors();
               });
           
               function getOpportunityStageColors(){

            if('{!opportunityCurrentStage}' == '{!CLOSED_WON}') {
                
                var listItems = $("#breadcrumbs-one li a");
                listItems.each(function(idx, li) {
                    var product = $(li);
                    
                    var stageNumber = product.attr('id').slice(2);

                    product.addClass('green');
         
                    console.log(product);
                });
            
            }
            
            else if('{!opportunityCurrentStage}' == '{!CLOSED_LOST}') {
            
                var lastStageNumber;
            
                <apex:repeat value="{!opportunityStageMap}" var="stageNumber">
                    stageColorMap[{!stageNumber}] = 'disable';
                    lastStageNumber = {!stageNumber};
                </apex:repeat>
                
                stageColorMap[lastStageNumber]  = 'red';
                
                var listItems = $("#breadcrumbs-one li a");
                listItems.each(function(idx, li) {
                    var product = $(li);
                    
                    var stageNumber = product.attr('id').slice(2);

                    product.addClass(stageColorMap[stageNumber]);
         
                    console.log(product);
                });
            
            }
            
            else {
            
                var currentStageNumber = 0;
                
                <apex:repeat value="{!opportunityStageMap}" var="stageNumber">
                    stageNoVSNameMap[{!stageNumber}] = '{!opportunityStageMap[stageNumber].stageName}';
                    stageColorMap[{!stageNumber}] = 'dummy';
                    if(currentStageNumber == 0){
                    
                        console.log('evalualte');
                        stageColorMap[{!stageNumber}] = 'current';
                        currentStageNumber = {!IF(opportunityStageMap[stageNumber].stageName == opportunityCurrentStage,stageNumber,0)};
                    
                    }
                    console.log('... {!stageNumber} => {!opportunityStageMap[stageNumber].stageName}');
                
                </apex:repeat>
                
                <apex:repeat value="{!opportunityStageMap}" var="stageNumber">
                
                    if({!stageNumber} < currentStageNumber) {
                   
                       stageColorMap[{!stageNumber}] = 'green';
                   
                   }
                
                </apex:repeat>
                
                var listItems = $("#breadcrumbs-one li a");
                listItems.each(function(idx, li) {
                    var product = $(li);
                    
                    var stageNumber = product.attr('id').slice(2);

                        product.addClass(stageColorMap[stageNumber]);

                    console.log(product);
                });
            }
        }
           </script>
           
        </apex:outputpanel>
        <br/><br/>

       <apex:outputPanel id="DisplayStageQuestions" >
            <apex:outputPanel id="DisplayStageQuestions1"> 
                <div class="questionsDiv">
                    <apex:repeat value="{!stageVsQuestionsMap[selectedStage]}" var="question">
                        <apex:outputPanel rendered="{!NOT(question.isAnswered)}">
                             <img src="{!$Resource.Unchecked_Arrow}" width="18" height="18" class="chkImage" id="{!question.questionApiName}" onclick="changeImage('{!question.questionApiName}','{!oppObj.Id}','{!recordTypeName}', '{!selectedStage}', '{!opportunityCurrentStage}','{!question.isUpdatable}');" />
                        </apex:outputPanel> 
                        <apex:outputPanel rendered="{!question.isAnswered}">     
                             <img src="/img/msg_icons/confirm16.png" width="18" height="18" class="chkImage" id="{!question.questionApiName}" onclick="changeImage('{!question.questionApiName}','{!oppObj.Id}','{!recordTypeName}', '{!selectedStage}', '{!opportunityCurrentStage}','{!question.isUpdatable}');" />
                        </apex:outputPanel> 
                        <!-- Tracy Guo updated 5/28/2015 -->
                        <b> 
                          <apex:outputText value=" {!question.question}" rendered="{!AND(question.isRequired, 
                          NOT(AND(recordTypeName == 'New Business - BOR', question.question=='Mutual Close plan compiled', question.isRequired, updateBORLabel)))}"/> 
                        </b> 
                        <b> 
                          <apex:outputText value="Mutual Close plan compiled / Request IM" rendered="{!AND(recordTypeName == 'New Business - BOR', question.question=='Mutual Close plan compiled', question.isRequired, updateBORLabel)}"/> 
                        </b> 
                       <apex:outputText value=" {!question.question}" rendered="{!!question.isRequired}"/> <br/><br/>
                   </apex:repeat>
               </div>
               
                <div class="questionsPanel">
                     
                     <div class="markButtons">
                     
                    
                     <apex:commandButton onclick="hideerror();" value="Mark as Current Stage" title="Mark as Current Stage" id="buttonVal1" styleClass="stageCompleteBtn" disabled="{!OR($Setup.OpportunityStagePermission__c.Is_ReadOnly__c,hasEditAccessToUser == false,AND(opportunityCurrentStage == CLOSED_LOST,selectedStage == CLOSED_WON))}" rendered="{!IF(opportunityCurrentStage != selectedStage,true,false)}"  action="{!changeOpportunityStageToCurrentStage}" reRender="mainPanel,panel" style="font-weight: bold;width: 140px; margin-right: 20px;float: center;" status="loadStatus"/>
                     <apex:commandButton onclick="hideerror();" value="Mark Stage as Complete" title="Mark Stage as Complete" id="buttonVal2" disabled="{!OR(opportunityCurrentStage == CLOSED_WON , $Setup.OpportunityStagePermission__c.Is_ReadOnly__c,hasEditAccessToUser == false)}" styleClass="stageCompleteBtn" rendered="{!IF(opportunityCurrentStage != CLOSED_LOST && opportunityCurrentStage == selectedStage,true,false)}" action="{!makeStageAsComplete}" reRender="mainPanel,panel,pan" style="font-weight: bold; width: 140px; margin-right: 20px; float: center;"  status="loadStatus"/> 
                     <apex:commandButton onclick="hideerror();" value="Closed Lost" title="Closed Lost" action="{!changeOpportunityStageToClosedLost}" status="loadStatus" disabled="{!OR(opportunityCurrentStage == CLOSED_LOST,$Setup.OpportunityStagePermission__c.Is_ReadOnly__c,hasEditAccessToUser == false)}" styleClass="closedLostBtn" rerender="mainPanel,panel" style="width: 140px;"/> 
                     
                     
                     </div>
                     
                     <apex:commandButton onclick="hideerror();" value="" action="{!next}" title="Next" disabled="{!NOT(selectedOpportunityStep < totalStages)}" reRender="panel1,DisplayStageQuestions" status="loadStatus" styleClass="nextBtn"/>
                     <apex:commandButton onclick="hideerror();" value="" action="{!previous}" title="Previous" disabled="{!NOT(selectedOpportunityStep > 1)}" reRender="panel1,DisplayStageQuestions" status="loadStatus" styleClass="prevBtn"/>
                    
                </div>
              
           </apex:outputPanel>
           
       </apex:outputPanel>
       </apex:outputPanel>
    </apex:form>    
</apex:page>